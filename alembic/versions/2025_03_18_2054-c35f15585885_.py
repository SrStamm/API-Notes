"""empty message

Revision ID: c35f15585885
Revises: fd24e1ada64f
Create Date: 2025-03-18 20:54:53.505524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c35f15585885'
down_revision: Union[str, None] = 'fd24e1ada64f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    role_enum = sa.Enum('USER', 'ADMIN', name='role')
    role_enum.create(op.get_bind())

    op.alter_column('tasks', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    
    # Remove the default value
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Update existing values to match the new Enum type
    op.execute("UPDATE users SET role = 'USER' WHERE role = 'user'")
    op.execute("UPDATE users SET role = 'ADMIN' WHERE role = 'admin'")
    
    # Alter the column to use the new Enum type with USING clause
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE role USING role::role")
    
    # Set the default value again
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'USER'::role")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove the default value
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Revert the column to use VARCHAR
    op.alter_column('users', 'role',
               existing_type=sa.Enum('USER', 'ADMIN', name='role'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    
    # Set the default value again
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'user'::character varying")
    
    # Drop the Enum type
    role_enum = sa.Enum('USER', 'ADMIN', name='role')
    role_enum.drop(op.get_bind())

    # Revert the user_id column in tasks table
    op.alter_column('tasks', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###